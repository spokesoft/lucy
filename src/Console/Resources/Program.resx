<?xml version="1.0" encoding="utf-8"?>
<root>

  <data name="App.Name">
    <value>lucy</value>
  </data>

  <!-- Command names -->

  <data name="Command.New">
    <value>new</value>
  </data>

  <data name="Command.List">
    <value>list</value>
  </data>

  <data name="Command.Show">
    <value>show</value>
  </data>

  <data name="Command.Update">
    <value>update</value>
  </data>

  <data name="Command.Delete">
    <value>delete</value>
  </data>

  <!-- Command descriptions -->

  <data name="Command.New.Description">
    <value>Create a new resource.</value>
  </data>

  <data name="Command.List.Description">
    <value>List all resources.</value>
  </data>

  <data name="Command.Show.Description">
    <value>Show details of a resource.</value>
  </data>

  <data name="Command.Update.Description">
    <value>Update an existing resource.</value>
  </data>

  <data name="Command.Delete.Description">
    <value>Delete a resource.</value>
  </data>

  <!-- Command context -->

  <data name="Command.Context.Project">
    <value>project</value>
  </data>

  <data name="Command.Context.Projects">
    <value>projects</value>
  </data>

  <!-- Base properties -->

  <data name="Property.Id">
    <value>Id</value>
  </data>

  <data name="Property.CreatedAt">
    <value>Created At</value>
  </data>

  <data name="Property.UpdatedAt">
    <value>Last Updated</value>
  </data>

  <data name="Empty.String">
    <value>&lt;empty&gt;</value>
  </data>

  <!-- Project properties -->

  <data name="Property.Project.Key">
    <value>Key</value>
  </data>

  <data name="Property.Project.Name">
    <value>Name</value>
  </data>

  <data name="Property.Project.Description">
    <value>Description</value>
  </data>

  <!-- Project resources -->

  <data name="View.ListProjects.Title">
    <value>Project List</value>
  </data>

  <data name="View.ListProjects.Caption">
    <value>Displaying {0}-{1} of {2} projects</value>
  </data>

  <data name="View.ShowProject.Title">
    <value>Project</value>
  </data>

  <data name="Command.New.Project.Description">
    <value>Create a new project.</value>
  </data>

  <data name="Command.New.Project.Example.0">
    <value>new project EXAMP --name Example</value>
  </data>

  <data name="Command.New.Project.Example.1">
    <value>new project EXAMPLE --name Example</value>
  </data>

  <data name="Command.List.Project.Description">
    <value>List all projects.</value>
  </data>

  <data name="Command.List.Project.Example.0">
    <value>list projects</value>
  </data>

  <data name="Command.Show.Project.Description">
    <value>Show details of a project.</value>
  </data>

  <data name="Command.Show.Project.Example.0">
    <value>show project EXAMP</value>
  </data>

  <data name="Command.Show.Project.Example.1">
    <value>show project --id 1</value>
  </data>

  <data name="Command.Update.Project.Description">
    <value>Update an existing project.</value>
  </data>

  <data name="Command.Update.Project.Example.0">
    <value>update project EXAMP --name NewName</value>
  </data>

  <data name="Command.Update.Project.Example.1">
    <value>update project --id 1 -n NewName</value>
  </data>

  <data name="Command.Update.Project.Example.2">
    <value>update project NEWKEY --id 1</value>
  </data>

  <data name="Command.Delete.Project.Description">
    <value>Delete a project.</value>
  </data>

  <data name="Command.Delete.Project.Example.0">
    <value>delete project EXAMP</value>
  </data>

  <data name="Command.Delete.Project.Example.1">
    <value>delete project --id 1</value>
  </data>

  <!-- Log messages -->

  <data name="Messages.CommandError">
    <value>An error occurred while executing the command: {message}</value>
  </data>

  <!-- Database migration log messages -->

  <data name="Messages.NoMigratorsRegistered">
    <value>No database migrators registered, skipping migrations.</value>
  </data>

  <data name="Messages.NoMigrationRequired">
    <value>No migrations required for {database}, the database is up to date.</value>
  </data>

  <data name="Messages.NoMigrationsRequired">
    <value>No database migrations required, all databases are up to date.</value>
  </data>

  <data name="Messages.MigrationsCompleted">
    <value>Database migrations completed successfully for {count} database(s) in {elapsed}ms</value>
  </data>

  <data name="Messages.MigrationsCanceled">
    <value>Database migrations canceled after {elapsed}ms</value>
  </data>

  <data name="Messages.MigrationsFailed">
    <value>Database migrations failed after {elapsed}ms</value>
  </data>

  <data name="Messages.MigrationCompleted">
    <value>Database migrations for {database} completed successfully in {elapsed}ms</value>
  </data>

  <data name="Messages.MigrationCanceled">
    <value>Database migrations for {database} canceled after {elapsed}ms</value>
  </data>

  <data name="Messages.MigrationFailed">
    <value>Database migrations for {database} failed after {elapsed}ms</value>
  </data>

  <!-- Logging service log messages -->

  <data name="Messages.LoggingServiceStarted">
    <value>Logging service started.</value>
  </data>

  <data name="Messages.LoggingServiceStopped">
    <value>Logging service stopped. {0} entries written after {1}ms</value>
  </data>

  <data name="Messages.CommandStarting">
    <value>Command {command} execution started at {start:yyyy-MM-dd HH:mm:ss} UTC by {user}</value>
  </data>

  <data name="Messages.CommandExecuted">
    <value>Command {command} executed with exit code {exitCode} in {elapsed}ms</value>
  </data>

  <!-- Command handling log messages -->

  <data name="Messages.CommandHandled">
    <value>Command {command} handled using {handler} in {elapsed}ms</value>
  </data>

  <!-- Command validation log messages -->

  <data name="Messages.NoValidatorsFound">
    <value>No validators found for command {command}, skipping validation.</value>
  </data>

  <data name="Messages.CommandValidationPassed">
    <value>Validation for command {command} succeeded, using {count} validator(s) in {elapsed}ms</value>
  </data>

  <data name="Messages.CommandValidationFailed">
    <value>Validation for command {command} failed in {elapsed}ms: {errors}</value>
  </data>

  <data name="Messages.CommandValidationCanceled">
    <value>Validation for command {command} canceled after {elapsed}ms</value>
  </data>

  <data name="Messages.CommandValidationError">
    <value>Validation for command {command} error after {elapsed}ms</value>
  </data>

  <data name="Messages.CommandValidatorPassed">
    <value>Validation for command {command} succeeded, using {validator} in {elapsed}ms</value>
  </data>

  <data name="Messages.CommandValidatorFailed">
    <value>Validation for command {command} failed, using {validator} in {elapsed}ms: {errors}</value>
  </data>

  <data name="Messages.CommandValidatorCanceled">
    <value>Validation for command {command} with {validator} canceled after {elapsed}ms</value>
  </data>

  <data name="Messages.CommandValidatorError">
    <value>Validation for command {command} with {validator} error after {elapsed}ms</value>
  </data>

</root>